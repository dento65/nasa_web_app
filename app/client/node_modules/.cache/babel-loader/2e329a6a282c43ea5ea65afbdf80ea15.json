{"ast":null,"code":"'use strict';\n/**\n * Get the correct status code for a given XHR request.\n *\n * @param {XHR} xhr A XHR request who's status code needs to be retrieved.\n * @returns {Object}\n * @api public\n */\n\nmodule.exports = function status(xhr) {\n  var local = /^file:/.test(xhr.responseURL),\n      code = xhr.status,\n      text = ''; //\n  // Older version IE incorrectly return status code 1233 for requests that\n  // respond with a 204 header.\n  //\n  // @see http://stackoverflow.com/q/10046972\n  //\n\n  if (1233 === code) return {\n    error: false,\n    text: 'OK',\n    code: 204\n  }; //\n  // If you make a request with a file:// protocol it returns status code 0 by\n  // default so we're going to assume 200 instead. But if you do a HTTP request\n  // to dead server you will also get the same 0 response code in chrome. So\n  // we're going to assume statusCode 200 for local files.\n  //\n\n  if (0 === code) return local ? {\n    error: false,\n    text: 'OK',\n    code: 200\n  } : {\n    error: true,\n    text: 'An unknown error occured',\n    code: 0\n  }; //\n  // FireFox will throw an error when accessing the statusText on faulty\n  // cross-domain requests.\n  //\n\n  try {\n    text = xhr.statusText;\n  } catch (e) {}\n\n  return {\n    error: code >= 400,\n    text: text,\n    code: code\n  };\n};","map":{"version":3,"sources":["/Users/hayat/Desktop/code/react/nasa/app/client/node_modules/xhr-status/index.js"],"names":["module","exports","status","xhr","local","test","responseURL","code","text","error","statusText","e"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACpC,MAAIC,KAAK,GAAG,SAASC,IAAT,CAAcF,GAAG,CAACG,WAAlB,CAAZ;AAAA,MACIC,IAAI,GAAGJ,GAAG,CAACD,MADf;AAAA,MAEIM,IAAI,GAAG,EAFX,CADoC,CAKpC;AACA;AACA;AACA;AACA;AACA;;AACA,MAAI,SAASD,IAAb,EAAmB,OAAO;AACxBE,IAAAA,KAAK,EAAE,KADiB;AAExBD,IAAAA,IAAI,EAAE,IAFkB;AAGxBD,IAAAA,IAAI,EAAE;AAHkB,GAAP,CAXiB,CAiBpC;AACA;AACA;AACA;AACA;AACA;;AACA,MAAI,MAAMA,IAAV,EAAgB,OAAOH,KAAK,GAAG;AAC7BK,IAAAA,KAAK,EAAE,KADsB;AAE7BD,IAAAA,IAAI,EAAE,IAFuB;AAG7BD,IAAAA,IAAI,EAAE;AAHuB,GAAH,GAIxB;AACFE,IAAAA,KAAK,EAAE,IADL;AAEFD,IAAAA,IAAI,EAAE,0BAFJ;AAGFD,IAAAA,IAAI,EAAE;AAHJ,GAJY,CAvBoB,CAiCpC;AACA;AACA;AACA;;AACA,MAAI;AAAEC,IAAAA,IAAI,GAAGL,GAAG,CAACO,UAAX;AAAwB,GAA9B,CACA,OAAOC,CAAP,EAAU,CAAE;;AAEZ,SAAO;AACLF,IAAAA,KAAK,EAAEF,IAAI,IAAI,GADV;AAELC,IAAAA,IAAI,EAAEA,IAFD;AAGLD,IAAAA,IAAI,EAAEA;AAHD,GAAP;AAKD,CA7CD","sourcesContent":["'use strict';\n\n/**\n * Get the correct status code for a given XHR request.\n *\n * @param {XHR} xhr A XHR request who's status code needs to be retrieved.\n * @returns {Object}\n * @api public\n */\nmodule.exports = function status(xhr) {\n  var local = /^file:/.test(xhr.responseURL)\n    , code = xhr.status\n    , text = '';\n\n  //\n  // Older version IE incorrectly return status code 1233 for requests that\n  // respond with a 204 header.\n  //\n  // @see http://stackoverflow.com/q/10046972\n  //\n  if (1233 === code) return {\n    error: false,\n    text: 'OK',\n    code: 204\n  };\n\n  //\n  // If you make a request with a file:// protocol it returns status code 0 by\n  // default so we're going to assume 200 instead. But if you do a HTTP request\n  // to dead server you will also get the same 0 response code in chrome. So\n  // we're going to assume statusCode 200 for local files.\n  //\n  if (0 === code) return local ? {\n    error: false,\n    text: 'OK',\n    code: 200\n  } : {\n    error: true,\n    text: 'An unknown error occured',\n    code: 0\n  };\n\n  //\n  // FireFox will throw an error when accessing the statusText on faulty\n  // cross-domain requests.\n  //\n  try { text = xhr.statusText; }\n  catch (e) {}\n\n  return {\n    error: code >= 400,\n    text: text,\n    code: code\n  };\n};\n"]},"metadata":{},"sourceType":"script"}