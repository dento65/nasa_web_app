{"ast":null,"code":"//\n// So this might need some explanation. There are firewalls, virus scanners and\n// what more that inspect the contents of files that is downloaded over the\n// internet and search for potential bad words. Some of them assume that\n// ActiveXObject is a bad word and will block the complete file from loading. In\n// order to prevent this from happening we've pre-decoded the word ActiveXObject\n// by changing the charCodes.\n//\nmodule.exports = function AXO(x, i) {\n  var target = typeof global !== 'undefined' ? global : window;\n\n  for (i = 0; i < x.length; i++) {\n    x[i] = String.fromCharCode(x[i].charCodeAt(0) + i);\n  }\n\n  return target[x.join('')];\n}('Abrfr`RHZa[Xh'.split(''));","map":{"version":3,"sources":["/Users/hayat/Desktop/code/react/nasa/app/client/node_modules/axo/index.js"],"names":["module","exports","AXO","x","i","target","global","window","length","String","fromCharCode","charCodeAt","join","split"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,GAAkB,SAASC,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACnC,MAAIC,MAAM,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,MAAtD;;AAEA,OAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,CAAC,CAACK,MAAlB,EAA0BJ,CAAC,EAA3B,EAA+B;AAC7BD,IAAAA,CAAC,CAACC,CAAD,CAAD,GAAOK,MAAM,CAACC,YAAP,CAAoBP,CAAC,CAACC,CAAD,CAAD,CAAKO,UAAL,CAAgB,CAAhB,IAAqBP,CAAzC,CAAP;AACD;;AAED,SAAOC,MAAM,CAACF,CAAC,CAACS,IAAF,CAAO,EAAP,CAAD,CAAb;AACD,CARgB,CAQd,gBAAgBC,KAAhB,CAAsB,EAAtB,CARc,CAAjB","sourcesContent":["//\n// So this might need some explanation. There are firewalls, virus scanners and\n// what more that inspect the contents of files that is downloaded over the\n// internet and search for potential bad words. Some of them assume that\n// ActiveXObject is a bad word and will block the complete file from loading. In\n// order to prevent this from happening we've pre-decoded the word ActiveXObject\n// by changing the charCodes.\n//\nmodule.exports = (function AXO(x, i) {\n  var target = typeof global !== 'undefined' ? global : window;\n\n  for (i = 0; i < x.length; i++) {\n    x[i] = String.fromCharCode(x[i].charCodeAt(0) + i);\n  }\n\n  return target[x.join('')];\n})('Abrfr`RHZa[Xh'.split(''));\n"]},"metadata":{},"sourceType":"script"}