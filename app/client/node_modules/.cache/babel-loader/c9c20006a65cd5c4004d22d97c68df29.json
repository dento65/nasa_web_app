{"ast":null,"code":"'use strict';\n\nvar EventEmitter = require('eventemitter3');\n\nfunction Requested(url, options) {\n  EventEmitter.call(this); //\n  // All properties/options that should be introduced on the prototype.\n  //\n\n  this.merge(this, Requested.defaults, options || {}); //\n  // Private properties that should not be overridden by developers.\n  //\n\n  this.id = ++Requested.requested; //\n  // We want to implement a stream like interface on top of this module so it\n  // can be used to read streaming data in node as well as through browserify.\n  //\n\n  this.readable = true;\n  this.writable = false;\n  if (this.initialize) this.initialize(url);\n  if (!this.manual && this.open) this.open(url);\n}\n\nRequested.extend = require('extendible');\nRequested.prototype = new EventEmitter();\nRequested.prototype.constructor = Requested;\n/**\n * Accurate type discovery.\n *\n * @param {Mixed} what What ever needs to be figured out.\n * @returns {String} Name of the type.\n * @api private\n */\n\nRequested.prototype.typeof = function type(what) {\n  return Object.prototype.toString.call(what).slice(8, -1).toLowerCase();\n};\n/**\n * Deeply assign and merge objects together.\n *\n * @param {Object} target The target object that should receive the merged data.\n * @returns {Object} The merged target object.\n * @api private\n */\n\n\nRequested.prototype.merge = function merge(target) {\n  var i = 1,\n      arg,\n      key;\n\n  for (; i < arguments.length; i++) {\n    arg = arguments[i];\n\n    for (key in arg) {\n      if (!Object.prototype.hasOwnProperty.call(arg, key)) continue;\n\n      if ('object' === this.typeof(arg[key])) {\n        target[key] = this.merge('object' === this.typeof(target[key]) ? target[key] : {}, arg[key]);\n      } else {\n        target[key] = arg[key];\n      }\n    }\n  }\n\n  return target;\n};\n/**\n * The defaults for the Requests. These values will be used if no options object\n * or matching key is provided. It can be override globally if needed but this\n * is not advised as it can have some potential side affects for other libraries\n * that use this module.\n *\n * @type {Object}\n * @public\n */\n\n\nRequested.defaults = {\n  streaming: false,\n  manual: false,\n  method: 'GET',\n  mode: 'cors',\n  headers: {\n    //\n    // We're forcing text/plain mode by default to ensure that regular\n    // requests can benefit from CORS requests without an OPTIONS request. It's\n    // shared between server and client implementations to ensure that requests\n    // are handled in exactly the same way.\n    //\n    'Content-Type': 'text/plain'\n  }\n};\n/**\n * Unique id and also an indication on how many XHR requests we've made using\n * this library.\n *\n * @type {Number}\n * @private\n */\n\nRequested.requested = 0; //\n// Expose the module interface.\n//\n\nmodule.exports = Requested;","map":{"version":3,"sources":["/Users/hayat/Desktop/code/react/nasa/app/client/node_modules/requests/requested.js"],"names":["EventEmitter","require","Requested","url","options","call","merge","defaults","id","requested","readable","writable","initialize","manual","open","extend","prototype","constructor","typeof","type","what","Object","toString","slice","toLowerCase","target","i","arg","key","arguments","length","hasOwnProperty","streaming","method","mode","headers","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar EventEmitter = require('eventemitter3');\n\nfunction Requested(url, options) {\n  EventEmitter.call(this);\n\n  //\n  // All properties/options that should be introduced on the prototype.\n  //\n  this.merge(this, Requested.defaults, options || {});\n\n  //\n  // Private properties that should not be overridden by developers.\n  //\n  this.id = ++Requested.requested;\n\n  //\n  // We want to implement a stream like interface on top of this module so it\n  // can be used to read streaming data in node as well as through browserify.\n  //\n  this.readable = true;\n  this.writable = false;\n\n  if (this.initialize) this.initialize(url);\n  if (!this.manual && this.open) this.open(url);\n}\n\nRequested.extend = require('extendible');\nRequested.prototype = new EventEmitter();\nRequested.prototype.constructor = Requested;\n\n\n/**\n * Accurate type discovery.\n *\n * @param {Mixed} what What ever needs to be figured out.\n * @returns {String} Name of the type.\n * @api private\n */\nRequested.prototype.typeof = function type(what) {\n  return Object.prototype.toString.call(what).slice(8, -1).toLowerCase();\n};\n\n/**\n * Deeply assign and merge objects together.\n *\n * @param {Object} target The target object that should receive the merged data.\n * @returns {Object} The merged target object.\n * @api private\n */\nRequested.prototype.merge = function merge(target) {\n  var i = 1\n    , arg, key;\n\n  for (; i < arguments.length; i++) {\n    arg = arguments[i];\n\n    for (key in arg) {\n      if (!Object.prototype.hasOwnProperty.call(arg, key)) continue;\n\n      if ('object' === this.typeof(arg[key])) {\n        target[key] = this.merge('object' === this.typeof(target[key]) ? target[key] : {}, arg[key]);\n      } else {\n        target[key] = arg[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * The defaults for the Requests. These values will be used if no options object\n * or matching key is provided. It can be override globally if needed but this\n * is not advised as it can have some potential side affects for other libraries\n * that use this module.\n *\n * @type {Object}\n * @public\n */\nRequested.defaults = {\n  streaming: false,\n  manual: false,\n  method: 'GET',\n  mode: 'cors',\n  headers: {\n    //\n    // We're forcing text/plain mode by default to ensure that regular\n    // requests can benefit from CORS requests without an OPTIONS request. It's\n    // shared between server and client implementations to ensure that requests\n    // are handled in exactly the same way.\n    //\n    'Content-Type': 'text/plain'\n  }\n};\n\n/**\n * Unique id and also an indication on how many XHR requests we've made using\n * this library.\n *\n * @type {Number}\n * @private\n */\nRequested.requested = 0;\n\n//\n// Expose the module interface.\n//\nmodule.exports = Requested;\n"]},"metadata":{},"sourceType":"script"}